This is the collection of custom python code that runs on the Raspberry Pi
part of the system. (See system diagram in "docs".)

At this point, it provides some useful functionality and provides a solid
framework for additional functionality.

Functionality (at least):
+ reads the locally connected motion detector
+ controls a locally connected solid state relay for lights
+ publishes locally connected sensors to the mosquitto data broker using mqtt
+ can respond to a change in the light mqtt topic (from NodeRed for example)
+ maintains a local copy of all of the data on the broker (e.g. remote module temp, humidity)
+ first simple motion->light alarm response and architecture to support more
+ can text (via email) on alarm and notifications
+ has a local key switch input for setting auto mode (led to indicate remote override)
+ separate pingtest.py reboots on loss of internet access

# Pending:
# + add remote reboot capability
# + add thresholds for t/h/g to change from notifications to alarm
# + command line arguments for logging level, filename, etc
# + configure the location and use to create the mqtt topics
#   ... make the data class instance name a bit more generic
# + add timer and configuration parameters to allow leaving after setting auto

See the Monitoring_local.py header for detailed changes in the latest commit.


